{"meta":{"title":"XiaoFu's Blog","subtitle":"","description":"Blog","author":"Xiao","url":"https://xiaochuanfu.github.io","root":"/"},"pages":[{"title":"","date":"2022-10-30T10:04:34.412Z","updated":"2022-10-30T10:04:34.412Z","comments":true,"path":"404.html","permalink":"https://xiaochuanfu.github.io/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2022-10-30T09:48:12.040Z","updated":"2022-10-30T09:48:12.040Z","comments":true,"path":"about/index.html","permalink":"https://xiaochuanfu.github.io/about/index.html","excerpt":"","text":"你好，我是萧萧！！！"},{"title":"","date":"2022-03-11T07:29:26.379Z","updated":"2022-03-11T07:29:26.379Z","comments":true,"path":"mylist/index.html","permalink":"https://xiaochuanfu.github.io/mylist/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2022-03-11T07:28:16.380Z","updated":"2022-03-11T07:28:16.380Z","comments":true,"path":"categories/index.html","permalink":"https://xiaochuanfu.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-05-19T16:00:00.000Z","updated":"2022-10-30T09:55:29.561Z","comments":true,"path":"friends/index.html","permalink":"https://xiaochuanfu.github.io/friends/index.html","excerpt":"以后的路还长，要加油哦！","text":"以后的路还长，要加油哦！ 可以在评论中留下友链。"},{"title":"Page","date":"2013-12-26T14:52:56.000Z","updated":"2022-03-11T07:30:29.167Z","comments":true,"path":"page/index.html","permalink":"https://xiaochuanfu.github.io/page/index.html","excerpt":"","text":"This is a page test."},{"title":"所有标签","date":"2022-03-11T07:28:34.219Z","updated":"2022-03-11T07:28:34.219Z","comments":true,"path":"tags/index.html","permalink":"https://xiaochuanfu.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2022-11-02T15:02:32.896Z","updated":"2022-11-02T15:02:32.896Z","comments":true,"path":"media/org.volantis/README.html","permalink":"https://xiaochuanfu.github.io/media/org.volantis/README.html","excerpt":"","text":"cdn-org 获取路径： https://www.jsdelivr.com/package/gh/volantis-x/cdn-org 也可以直接拼接路径： https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/文件 例如： https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/blog/Logo-Cover@3x.png"},{"title":"","date":"2022-11-02T15:02:32.896Z","updated":"2022-11-02T15:02:32.896Z","comments":true,"path":"media/placeholder/README.html","permalink":"https://xiaochuanfu.github.io/media/placeholder/README.html","excerpt":"","text":"CDN获取路径： https://www.jsdelivr.com/package/gh/cdn-x/placeholder 文件路径： https://cdn.jsdelivr.net/gh/cdn-x/placeholder/README.md"},{"title":"","date":"2022-11-02T15:02:32.888Z","updated":"2022-11-02T15:02:32.888Z","comments":true,"path":"media/twemoji/README.html","permalink":"https://xiaochuanfu.github.io/media/twemoji/README.html","excerpt":"","text":"Twitter Emoji (Twemoji) A simple library that provides standard Unicode emoji support across all platforms. Twemoji v12.0 adheres to the Unicode 12.0 spec and supports the Emoji 12.0 spec The Twemoji library offers support for 3,075 emojis. UsageCDN SupportThe folks over at MaxCDN have graciously provided CDN support. Use the following in the &lt;head&gt; tag of your HTML document(s): &lt;script src=&quot;https://twemoji.maxcdn.com/v/latest/twemoji.min.js&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; This guarantees that you will always use the latest version of the library. If, instead, you’d like to include the latest version explicitly, you can add the following tag: &lt;script src=&quot;https://twemoji.maxcdn.com/v/12.1.6/twemoji.min.js&quot; integrity=&quot;sha384-XfulzVp257jTD4j8TtghtZ75YaRE+O+F2brm/dAHuawJEvzeoco+4c0Q1bm5ha3M&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; DownloadIf instead you want to download a specific version, please look at the gh-pages branch, where you will find the built assets for both our latest and older versions. APIFollowing are all the methods exposed in the twemoji namespace. twemoji.parse( … ) V1This is the main parsing utility and has 3 overloads per parsing type. There are mainly two kinds of parsing: string parsing and DOM parsing. Each of them accepts a callback to generate an image source or an options object with parsing info. Here is a walkthrough of all parsing possibilities: DOM parsingIn contrast to string parsing, if the first argument is an HTMLElement, generated image tags will replace emoji that are inside #text nodes only without compromising surrounding nodes or listeners, and completely avoiding the usage of innerHTML. If security is a major concern, this parsing can be considered the safest option but with a slight performance penalty due to DOM operations that are inevitably costly. var div = document.createElement(&#39;div&#39;); div.textContent = &#39;I \\u2764\\uFE0F emoji!&#39;; document.body.appendChild(div); twemoji.parse(document.body); var img = div.querySelector(&#39;img&#39;); // note the div is preserved img.parentNode === div; // true img.src; // https://twemoji.maxcdn.com/v/latest/72x72/2764.png img.alt; // \\u2764\\uFE0F img.className; // emoji img.draggable; // false All other overloads described for string are available in exactly the same way for DOM parsing. Object as parameterHere’s the list of properties accepted by the optional object that can be passed to the parse function. &#123; callback: Function, // default the common replacer attributes: Function, // default returns &#123;&#125; base: string, // default MaxCDN ext: string, // default &quot;.png&quot; className: string, // default &quot;emoji&quot; size: string|number, // default &quot;72x72&quot; folder: string // in case it&#39;s specified // it replaces .size info, if any &#125; callbackThe function to invoke in order to generate image src(s). By default it is a function like the following one: function imageSourceGenerator(icon, options) &#123; return &#39;&#39;.concat( options.base, // by default Twitter Inc. CDN options.size, // by default &quot;72x72&quot; string &#39;/&#39;, icon, // the found emoji as code point options.ext // by default &quot;.png&quot; ); &#125; baseThe default url is the same as twemoji.base, so if you modify the former, it will reflect as default for all parsed strings or nodes. extThe default image extension is the same as twemoji.ext which is &quot;.png&quot;. If you modify the former, it will reflect as default for all parsed strings or nodes. classNameThe default class for each generated image is emoji. It is possible to specify a different one through this property. sizeThe default asset size is the same as twemoji.size which is &quot;72x72&quot;. If you modify the former, it will reflect as default for all parsed strings or nodes. folderIn case you don’t want to specify a size for the image. It is possible to choose a folder, as in the case of SVG emoji. twemoji.parse(genericNode, &#123; folder: &#39;svg&#39;, ext: &#39;.svg&#39; &#125;); This will generate urls such https://twemoji.maxcdn.com/svg/2764.svg instead of using a specific size based image. UtilitiesBasic utilities &#x2F; helpers to convert code points to JavaScript surrogates and vice versa. twemoji.convert.fromCodePoint()For a given HEX codepoint, returns UTF-16 surrogate pairs. twemoji.convert.fromCodePoint(&#39;1f1e8&#39;); // &quot;\\ud83c\\udde8&quot; twemoji.convert.toCodePoint()For given UTF-16 surrogate pairs, returns the equivalent HEX codepoint. twemoji.convert.toCodePoint(&#39;\\ud83c\\udde8\\ud83c\\uddf3&#39;); // &quot;1f1e8-1f1f3&quot; twemoji.convert.toCodePoint(&#39;\\ud83c\\udde8\\ud83c\\uddf3&#39;, &#39;~&#39;); // &quot;1f1e8~1f1f3&quot; TipsInline StylesIf you’d like to size the emoji according to the surrounding text, you can add the following CSS to your stylesheet: img.emoji &#123; height: 1em; width: 1em; margin: 0 .05em 0 .1em; vertical-align: -0.1em; &#125; This will make sure emoji derive their width and height from the font-size of the text they’re shown with. It also adds just a little bit of space before and after each emoji, and pulls them upwards a little bit for better optical alignment. UTF-8 Character SetTo properly support emoji, the document character set must be set to UTF-8. This can done by including the following meta tag in the document &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; Exclude Characters (V1)To exclude certain characters from being replaced by twemoji.js, call twemoji.parse() with a callback, returning false for the specific unicode icon. For example: twemoji.parse(document.body, &#123; callback: function(icon, options, variant) &#123; switch ( icon ) &#123; case &#39;a9&#39;: // © copyright case &#39;ae&#39;: // ® registered trademark case &#39;2122&#39;: // ™ trademark return false; &#125; return &#39;&#39;.concat(options.base, options.size, &#39;/&#39;, icon, options.ext); &#125; &#125;); Legacy API (V1)If you’re still using our V1 API, you can read our legacy documentation here. ContributingThe contributing documentation can be found here. Attribution RequirementsAs an open source project, attribution is critical from a legal, practical and motivational perspective in our opinion. The graphics are licensed under the CC-BY 4.0 which has a pretty good guide on best practices for attribution. However, we consider the guide a bit onerous and as a project, will accept a mention in a project README or an ‘About’ section or footer on a website. In mobile applications, a common place would be in the Settings&#x2F;About section (for example, see the mobile Twitter application Settings-&gt;About-&gt;Legal section). We would consider a mention in the HTML&#x2F;JS source sufficient also. Community Projects Twemoji Amazing by @SebastianAigner: Use Twemoji using CSS classes (like Font Awesome). Twemoji Ruby by @JollyGoodCode: Use Twemoji in Ruby. Twemoji for Pencil by @Nathanielnw: Use Twemoji in Pencil. FrwTwemoji - Twemoji in dotnet by @FrenchW: Use Twemoji in any dotnet project (C#, asp.net …). Emojiawesome - Twemoji for Yellow by @datenstrom: Use Twemoji on your website. EmojiPanel for Twitter by @danielbovey: Insert Twemoji into your tweets on twitter.com. Twitter Color Emoji font by @bderickson: Use Twemoji as your system default font on Linux &amp; OS X. Emojica by @xoudini: An iOS framework allowing you to replace all standard emoji in strings with Twemoji. [Unmaintained] Twemoji Awesome by @ellekasai: Use Twemoji using CSS classes (like Font Awesome). Committers and Contributors Bryan Haggerty (Twitter) Nathan Downs (Twitter) Tom Wuttke (ex-Twitter) Andrea Giammarchi (ex-Twitter) Joen Asmussen (WordPress) Marcus Kazmierczak (WordPress) The goal of this project is to simply provide emoji for everyone. We definitely welcome improvements and fixes, but we may not merge every pull request suggested by the community due to the simple nature of the project. The rules for contributing are available in the CONTRIBUTING.md file. Thank you to all of our contributors. LicenseCopyright 2019 Twitter, Inc and other contributors Code licensed under the MIT License: http://opensource.org/licenses/MIT Graphics licensed under CC-BY 4.0: https://creativecommons.org/licenses/by/4.0/"},{"title":"","date":"2022-11-02T15:02:32.888Z","updated":"2022-11-02T15:02:32.888Z","comments":true,"path":"media/fonts/CascadiaCode/README.html","permalink":"https://xiaochuanfu.github.io/media/fonts/CascadiaCode/README.html","excerpt":"","text":"Microsoft 去年出的一款好看的编程等宽字体GitHub源码 体验的效果可见我的博客 它对代码中的某些运算符的显示做了优化, 如&lt;=自动变成了≤, 但复制下来还是&lt;= . 当然你也可以选择不要这个连字优化, 那就用带PL的字体"}],"posts":[{"title":"hahahhahhahhaha","slug":"hahahhahhahhaha","date":"2022-10-29T13:43:20.000Z","updated":"2022-10-29T14:08:14.734Z","comments":true,"path":"2022/10/29/hahahhahhahhaha/","link":"","permalink":"https://xiaochuanfu.github.io/2022/10/29/hahahhahhahhaha/","excerpt":"","text":"你明白么hahayou呼哈shenmenwangyi","categories":[],"tags":[{"name":"哈哈","slug":"哈哈","permalink":"https://xiaochuanfu.github.io/tags/%E5%93%88%E5%93%88/"}]},{"title":"xiao","slug":"xiao","date":"2022-03-10T06:04:00.000Z","updated":"2022-03-10T06:10:39.746Z","comments":true,"path":"2022/03/10/xiao/","link":"","permalink":"https://xiaochuanfu.github.io/2022/03/10/xiao/","excerpt":"","text":"萧萧8888 hello8888 哈哈哈8888 萧萧打打你好","categories":[],"tags":[]},{"title":"正则","slug":"正则","date":"2022-03-10T06:04:00.000Z","updated":"2022-10-29T13:59:32.310Z","comments":true,"path":"2022/03/10/正则/","link":"","permalink":"https://xiaochuanfu.github.io/2022/03/10/%E6%AD%A3%E5%88%99/","excerpt":"","text":"一、正则基础1、为什么使用正则 需求 判断一个字符串是否是手机号 解决 编写一个函数，给函数一个字符串，如果是手机号则返回True，否则返回False 代码 12345678910def isPhone(phone): # 长度为11 # 全部都是数字字符 # 以1开头 passif isPhone(&quot;13812345678&quot;): print(&quot;是手机号&quot;)else: print(&quot;不是手机号&quot;) 注意 如果使用正则会让这个问题变得简单 2、正则与re模块简介概述： 正则表达式，又称规则表达式 正则表达式(regular expression)描述了一种字符串匹配的模式（pattern） 正则匹配是一个 模糊的匹配(不是精确匹配) re：python自1.5版本开始增加了re模块，该模块提供了perl风格的正则表达式模式，re模块是python语言拥有了所有正则表达式的功能 如下四个方法经常使用 match() search() findall() finditer() 二、正则表达式1、匹配单个字符与数字 匹配 说明 . 匹配除换行符以外的任意字符，当flags被设置为re.S时，可以匹配包含换行符以内的所有字符 [] 里面是字符集合，匹配[]里任意一个字符 [0123456789] 匹配任意一个数字字符 [0-9] 匹配任意一个数字字符 [a-z] 匹配任意一个小写英文字母字符 [A-Z] 匹配任意一个大写英文字母字符 [A-Za-z] 匹配任意一个英文字母字符 [A-Za-z0-9] 匹配任意一个数字或英文字母字符 [^lucky] []里的^称为脱字符，表示非，匹配不在[]内的任意一个字符 ^[lucky] 以[]中内的某一个字符作为开头 \\d digital 匹配任意一个数字字符，相当于[0-9] \\D 匹配任意一个非数字字符，相当于[^0-9] \\w word 匹配字母、下划线、数字中的任意一个字符，相当于[0-9A-Za-z_] \\W 匹配非字母、下划线、数字中的任意一个字符，相当于[^0-9A-Za-z_] \\s space 匹配空白符(空格、换页、换行、回车、制表)，相当于[ \\f\\n\\r\\t] \\S 匹配非空白符(空格、换页、换行、回车、制表)，相当于[^ \\f\\n\\r\\t] \\b border 匹配单词边界 \\B 匹配非数字边界 \\n newline 查找换行符 \\f form feed 查找换页符 \\r return 查找回车符 \\t tab 查找制表符 \\v vertical tab 垂直制表符 2、匹配锚字符锚字符:用来判定是否按照规定开始或者结尾 匹配 说明 ^ 行首匹配，和[]里的^不是一个意思 $ 行尾匹配 \\A 匹配字符串的开始，和^的区别是\\A只匹配整个字符串的开头，即使在re.M模式下也不会匹配其他行的行首 \\Z 匹配字符串的结尾，和$的区别是\\Z只匹配整个字符串的结尾，即使在re.M模式下也不会匹配其他行的行尾 3、限定符限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 * 或 + 或 ? 或 {n} 或 {n,} 或 {n,m} 共6种。 匹配 说明 (xyz) 匹配括号内的xyz，作为一个整体去匹配 一个单元 子存储 x? 匹配0个或者1个x，非贪婪匹配 x* 匹配0个或任意多个x x+ 匹配至少一个x x{n} 确定匹配n个x，n是非负数 x{n,} 至少匹配n个x x{n,m} 匹配至少n个最多m个x x|y |表示或的意思，匹配x或y 三、re模块中常用函数通用flags（修正符） 值 说明 re.I 是匹配对大小写不敏感 re.M 多行匹配，影响到^和$ re.S 使.匹配包括换行符在内的所有字符 通用函数 获取匹配结果 使用group()方法 获取到匹配的值 groups() 返回一个包含所有小组字符串的元组(也就是自存储的值)，从 1 到 所含的小组号。 1、match()函数 原型 1def match(pattern, string, flags=0) 功能 匹配成功返回 匹配的对象 匹配失败 返回 None 获取匹配结果 使用group()方法 获取到匹配的值 groups() 返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。 注意：从第一位开始匹配 只匹配一次 参数 参数 说明 pattern 匹配的正则表达式(一种字符串的模式) string 要匹配的字符串 flags 标识位，用于控制正则表达式的匹配方式 代码 1234567891011import reres = re.match(&#x27;\\d&#123;2&#125;&#x27;,&#x27;123&#x27;)print(res.group())print(res.span())#给当前匹配到的结果起别名s = &#x27;3G4HFD567&#x27;re.match(&quot;(?P&lt;value&gt;\\d+)&quot;,s)print(x.group(0))print(x.group(&#x27;value&#x27;)) 2、searce()函数 原型 1def search(pattern, string, flags=0) 功能 扫描整个字符串string，并返回第一个pattern模式成功的匹配 匹配失败 返回 None 参数 参数 说明 pattern 匹配的正则表达式(一种字符串的模式) string 要匹配的字符串 flags 标识位，用于控制正则表达式的匹配方式 注意： 只要字符串包含就可以 只匹配一次 示例 12345import reres = re.search(&#x27;[a-z]&#x27;, &#x27;131A3ab889s&#x27;)print(res)print(res.group() 注意 与search的区别 相同点： 都只匹配一次 不同点： search是在要匹配的字符串中 包含正则表达式的内容就可以 match 必须第一位就开始匹配 否则匹配失败 3、findall()函数（返回列表） 原型 1def findall(pattern, string, flags=0) 功能 扫描整个字符串string，并返回所有匹配的pattern模式结果的字符串列表 参数 参数 说明 pattern 匹配的正则表达式(一种字符串的模式) string 要匹配的字符串 flags 标识位，用于控制正则表达式的匹配方式 示例 12345678910111213141516171819202122232425262728293031myStr = &quot;&quot;&quot;&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;&lt;A href=&quot;http://www.taobao.com&quot;&gt;淘宝&lt;/A&gt;&lt;a href=&quot;http://www.id97.com&quot;&gt;电影网站&lt;/a&gt;&lt;i&gt;我是倾斜1&lt;/i&gt;&lt;i&gt;我是倾斜2&lt;/i&gt;&lt;em&gt;我是倾斜2&lt;/em&gt;&quot;&quot;&quot;# html里是不区分大小写# （1）给正则里面匹配的 加上圆括号 会将括号里面的内容进行 单独的返回res = re.findall(&quot;(&lt;a href=\\&quot;http://www\\.(.*?)\\.com\\&quot;&gt;(.*?)&lt;/a&gt;)&quot;,myStr) #[(&#x27;&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;&#x27;, &#x27;baidu&#x27;, &#x27;百度&#x27;)]# 括号的区别res = re.findall(&quot;&lt;a href=\\&quot;http://www\\..*?\\.com\\&quot;&gt;.*?&lt;/a&gt;&quot;,myStr) #[&#x27;&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;&#x27;]#(2) 不区分大小写的匹配res = re.findall(&quot;&lt;a href=\\&quot;http://www\\..*?\\.com\\&quot;&gt;.*?&lt;/a&gt;&quot;,myStr,re.I) #[&#x27;&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;&#x27;, &#x27;&lt;A href=&quot;http://www.taobao.com&quot;&gt;淘宝&lt;/A&gt;&#x27;]res = re.findall(&quot;&lt;[aA] href=\\&quot;http://www\\..*?\\.com\\&quot;&gt;.*?&lt;/[aA]&gt;&quot;,myStr) #[&#x27;&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;&#x27;]#(3) 使.支持换行匹配res = re.findall(&quot;&lt;a href=\\&quot;http://www\\..*?\\.com\\&quot;&gt;.*?&lt;/a&gt;&quot;,myStr,re.S) ##(4) 支持换行 支持不区分大小写匹配res = re.findall(&quot;&lt;a href=\\&quot;http://www\\..*?\\.com\\&quot;&gt;.*?&lt;/a&gt;&quot;,myStr,re.S|re.I) #print(res) 贪婪与非贪婪模式 Chapter 1 - 介绍正则表达式 贪婪：下面的表达式匹配从开始小于符号 (&lt;) 到关闭 H1 标记的大于符号 (&gt;) 之间的所有内容。 1/&lt;.*&gt;/ 非贪婪：如果您只需要匹配开始和结束 H1 标签，下面的非贪婪表达式只匹配 。 1/&lt;.*?&gt;/ 如果只想匹配开始的 H1 标签，表达式则是： 1/&lt;\\w+?&gt; 4、finditer()函数 原型 1def finditer(pattern, string, flags=0) 功能 与findall()类似，返回一个迭代器 参数 参数 说明 pattern 匹配的正则表达式(一种字符串的模式) string 要匹配的字符串 flags 标识位，用于控制正则表达式的匹配方式 代码 12345678import reres = re.finditer(&#x27;\\w&#x27;, &#x27;12hsakda1&#x27;)print(res)print(next(res))for i in res: print(i) 5、split()函数 作用：切割字符串 原型： 1def split(patter, string, maxsplit=0, flags=0) 参数 pattern 正则表达式 string 要拆分的字符串 maxsplit 最大拆分次数 默认拆分全部 flags 修正符 示例 12345import remyStr = &quot;asdas\\rd&amp;a\\ts12d\\n*a3sd@a_1sd&quot;#通过特殊字符 对其进行拆分 成列表res = re.split(&quot;[^a-z]&quot;,myStr)res = re.split(&quot;\\W&quot;,myStr) 6、修正符 作用 对正则进行修正 使用 search&#x2F;match&#x2F;findall&#x2F;sub&#x2F;subn&#x2F;finditer 等函数 flags参数的使用 修正符 re.I 不区分大小写匹配 re.M 多行匹配 影响到^ 和 $ 的功能 re.S 使.可以匹配换行符 匹配任意字符 使用 re.I 12print(re.findall(&#x27;[a-z]&#x27;,&#x27;AaBb&#x27;))print(re.findall(&#x27;[a-z]&#x27;,&#x27;AaBb&#x27;, flags=re.I)) re.M(实际) 12345678910myStr = &quot;&quot;&quot;asadasdd1\\nbsadasdd2\\ncsadasdd3&quot;&quot;&quot;print(re.findall(&#x27;^[a-z]&#x27;,myStr, ))print(re.findall(&#x27;\\A[a-z]&#x27;,myStr))print(re.findall(&#x27;\\d$&#x27;,myStr))print(re.findall(&#x27;\\d\\Z&#x27;,myStr))# re.Mprint(re.findall(&#x27;^[a-z]&#x27;,myStr, flags=re.M))print(re.findall(&#x27;\\A[a-z]&#x27;,myStr, flags=re.M))print(re.findall(&#x27;\\d$&#x27;,myStr, flags=re.M))print(re.findall(&#x27;\\d\\Z&#x27;,myStr, flags=re.M)) re.S 12print(re.findall(&#x27;&lt;b&gt;.*?&lt;/b&gt;&#x27;,&#x27;&lt;b&gt;b标签&lt;/b&gt;&#x27;))print(re.findall(&#x27;&lt;b&gt;.*?&lt;/b&gt;&#x27;,&#x27;&lt;b&gt;b标\\n签&lt;/b&gt;&#x27;, flags=re.S)) 四、正则高级1、分组&amp;起名称 概念 处理简单的判断是否匹配之外，正则表达式还有提取子串的功能，用()表示的就是要提取的分组 代码 12345#给当前匹配到的结果起别名s = &#x27;3G4HFD567&#x27;re.match(&quot;(?P&lt;value&gt;\\d+)&quot;,s)print(x.group(0))print(x.group(&#x27;value&#x27;)) 说明 正则表达式中定义了组，就可以在Match对象上用group()方法提取出子串来 group(0)永远是原始字符串，group(1)、group(2)……表示第1、2、……个子串 2、编译 概念 当在python中使用正则表达式时，re模块会做两件事，一件是编译正则表达式，如果表达式的字符串本身不合法，会报错。另一件是用编译好的正则表达式提取匹配字符串 编译优点 如果一个正则表达式要使用几千遍，每一次都会编译，出于效率的考虑进行正则表达式的编译，就不需要每次都编译了，节省了编译的时间，从而提升效率 compile()函数 原型 1def compile(pattern, flags=0) 作用 将pattern模式编译成正则对象 参数 参数 说明 pattern 匹配的正则表达式(一种字符串的模式) flags 标识位，用于控制正则表达式的匹配方式 flags 值 说明 re.I 是匹配对大小写不敏感 re.M 多行匹配，影响到^和$ re.S 使.匹配包括换行符在内的所有字符 返回值 编译好的正则对象 示例 1234import rere_phone = re.compile(r&quot;(0\\d&#123;2,3&#125;-\\d&#123;7,8&#125;)&quot;)print(re_phone, type(re_phone)) 编译后其他方法的使用 原型 1234def match(self, string, pos=0, endpos=-1)def search(self, string, pos=0, endpos=-1)def findall(self, string, pos=0, endpos=-1)def finditer(self, string, pos=0, endpos=-1) 参数 参数 说明 string 待匹配的字符串 pos 从string字符串pos下标开始 endpos 结束下标 示例 123456s1 = &quot;lucky&#x27;s phone is 010-88888888&quot;s2 = &quot;kaige&#x27;s phone is 010-99999999&quot;ret1 = re_phone.search(s1)print(ret1, ret1.group(1))ret2 = re_phone.search(s2)print(ret2, ret2.group(1)) 3、贪婪与非贪婪 贪婪模式 贪婪概念：匹配尽可能多的字符 .+ 匹配换行符以外的字符至少一次 .* 匹配换行符以外的字符任意次 实例 12res = re.search(&#x27;&lt;b&gt;.+&lt;/b&gt;&#x27;, &#x27;&lt;b&gt;&lt;/b&gt;&lt;b&gt;b标签&lt;/b&gt;&#x27;)res = re.search(&#x27;&lt;b&gt;.*&lt;/b&gt;&#x27;, &#x27;&lt;b&gt;b标签&lt;/b&gt;&lt;b&gt;b标签&lt;/b&gt;&lt;b&gt;b标签&lt;/b&gt;&lt;b&gt;b标签&lt;/b&gt;&#x27;) 非贪婪模式 非贪婪概念：尽可能少的匹配称为非贪婪匹配，*?、+?即可 .+? 匹配换行符以外的字符至少一次 拒绝贪婪 .*? 匹配换行符以外的字符任意次 拒绝贪婪 实例 12res = re.search(&#x27;&lt;b&gt;.+?&lt;/b&gt;&#x27;, &#x27;&lt;b&gt;b标签&lt;/b&gt;&lt;b&gt;b标签&lt;/b&gt;&#x27;)res = re.search(&#x27;&lt;b&gt;.*?&lt;/b&gt;&#x27;, &#x27;&lt;b&gt;b标签&lt;/b&gt;&lt;b&gt;b标签&lt;/b&gt;&lt;b&gt;b标签&lt;/b&gt;&lt;b&gt;b标签&lt;/b&gt;&#x27;) 五、作业练习一定先把代码写熟练几遍 在写练习！！！！！！！！！ 文件路径-&gt;素材 匹配年.txt 匹配所有正常的年 7年 9年 匹配出 2016&#x2F;06&#x2F;17格式的年月日 匹配邮箱手机号.txt 匹配所有正常的手机号 匹配邮箱 匹配豆瓣 匹配豆瓣图书标题 匹配图书的img标签 并将匹配到的标签写入img.html中 抓取简介 股票.html 匹配出股票信息 匹配大学排名 匹配ranking字段 世界排名 大学名称","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-03-09T10:47:29.718Z","updated":"2022-03-09T10:47:29.718Z","comments":true,"path":"2022/03/09/hello-world/","link":"","permalink":"https://xiaochuanfu.github.io/2022/03/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Code Highlight Style test","slug":"code-highlight","date":"2019-07-25T08:43:00.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2019/07/25/code-highlight/","link":"","permalink":"https://xiaochuanfu.github.io/2019/07/25/code-highlight/","excerpt":"Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of https://highlightjs.org","text":"Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of https://highlightjs.org 1Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#x27;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. 12345678910111213141516#[derive(Debug)]pub enum State &#123; Start, Transient, Closed,&#125;impl From&lt;&amp;&#x27;a str&gt; for State &#123; fn from(s: &amp;&#x27;a str) -&gt; Self &#123; match s &#123; &quot;start&quot; =&gt; State::Start, &quot;closed&quot; =&gt; State::Closed, _ =&gt; unreachable!(), &#125; &#125;&#125; 123456789101112[ &#123; &quot;title&quot;: &quot;apples&quot;, &quot;count&quot;: [12000, 20000], &quot;description&quot;: &#123;&quot;text&quot;: &quot;...&quot;, &quot;sensitive&quot;: false&#125; &#125;, &#123; &quot;title&quot;: &quot;oranges&quot;, &quot;count&quot;: [17500, null], &quot;description&quot;: &#123;&quot;text&quot;: &quot;...&quot;, &quot;sensitive&quot;: false&#125; &#125;] 123456789101112@requires_authorizationdef somefunc(param1=&#x27;&#x27;, param2=0): r&#x27;&#x27;&#x27;A docstring&#x27;&#x27;&#x27; if param1 &gt; param2: # interesting print &#x27;Gre\\&#x27;ater&#x27; return (param2 - param1 + 1 + 0b10l) or Noneclass SomeClass: pass&gt;&gt;&gt; message = &#x27;&#x27;&#x27;interpreter... prompt&#x27;&#x27;&#x27; 12345678910111213&lt;!DOCTYPE html&gt;&lt;title&gt;Title&lt;/title&gt;&lt;style&gt;body &#123;width: 500px;&#125;&lt;/style&gt;&lt;script type=&quot;application/javascript&quot;&gt; function $init() &#123;return true;&#125;&lt;/script&gt;&lt;body&gt; &lt;p checked class=&quot;title&quot; id=&#x27;title&#x27;&gt;Title&lt;/p&gt; &lt;!-- here goes the rest of the page --&gt;&lt;/body&gt; 123456789101112131415161718192021function $initHighlight(block, cls) &#123; try &#123; if (cls.search(/\\bno\\-highlight\\b/) != -1) return process(block, true, 0x0F) + ` class=&quot;$&#123;cls&#125;&quot;`; &#125; catch (e) &#123; /* handle exception */ &#125; for (var i = 0 / 2; i &lt; classes.length; i++) &#123; if (checkCondition(classes[i]) === undefined) console.log(&#x27;undefined&#x27;); &#125; return ( &lt;div&gt; &lt;web-component&gt;&#123;block&#125;&lt;/web-component&gt; &lt;/div&gt; )&#125;export $initHighlight; 1234567891011121314#include &lt;iostream&gt;int main(int argc, char *argv[]) &#123; /* An annoying &quot;Hello World&quot; example */ for (auto i = 0; i &lt; 0xFFFF; i++) cout &lt;&lt; &quot;Hello, World!&quot; &lt;&lt; endl; char c = &#x27;\\n&#x27;; unordered_map &lt;string, vector&lt;string&gt; &gt; m; m[&quot;key&quot;] = &quot;\\\\\\\\&quot;; // this is an error return -2e3 + 12l;&#125; 123456789101112CREATE TABLE &quot;topic&quot; ( &quot;id&quot; serial NOT NULL PRIMARY KEY, &quot;forum_id&quot; integer NOT NULL, &quot;subject&quot; varchar(255) NOT NULL);ALTER TABLE &quot;topic&quot;ADD CONSTRAINT forum_id FOREIGN KEY (&quot;forum_id&quot;)REFERENCES &quot;forum&quot; (&quot;id&quot;);-- Initialsinsert into &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)values (2, &#x27;D&#x27;&#x27;artagnian&#x27;); 12345678910111213#import &lt;UIKit/UIKit.h&gt;#import &quot;Dependency.h&quot;@protocol WorldDataSource@optional- (NSString*)worldName;@required- (BOOL)allowsToLive;@end@property (nonatomic, readonly) NSString *title;- (IBAction) show;@end 12345678910111213141516/** * @author John Smith &lt;john.smith@example.com&gt;*/package l2f.gameserver.model;public abstract class L2Char extends L2Object &#123; public static final Short ERROR = 0x0001; public void moveTo(int x, int y, int z) &#123; _ai = null; log(&quot;Should not be called&quot;); if (1 &gt; 5) &#123; // wtf!? return; &#125; &#125;&#125; 123456789101112131415import Foundation@objc class Person: Entity &#123; var name: String! var age: Int! init(name: String, age: Int) &#123; /* /* ... */ */ &#125; // Return a descriptive string for this person func description(offset: Int = 0) -&gt; String &#123; return &quot;\\(name) is \\(age + offset) years old&quot; &#125;&#125; 123456789101112131415@font-face &#123; font-family: Chunkfive; src: url(&#x27;Chunkfive.otf&#x27;);&#125;body, .usertext &#123; color: #F0F0F0; background: #600; font-family: Chunkfive, sans;&#125;@import url(print.css);@media print &#123; a[href^=http]::after &#123; content: attr(href) &#125;&#125; 12345678910111213# The Greeter classclass Greeter def initialize(name) @name = name.capitalize end def salute puts &quot;Hello #&#123;@name&#125;!&quot; endendg = Greeter.new(&quot;world&quot;)g.salute 12345678910111213# MakefileBUILDDIR = _buildEXTRAS ?= $(BUILDDIR)/extras.PHONY: main cleanmain: @echo &quot;Building main facility...&quot; build_main $(BUILDDIR)clean: rm -rf $(BUILDDIR)/* 123456789101112package mainimport &quot;fmt&quot;func main() &#123; ch := make(chan float64) ch &lt;- 1.0e10 // magic number x, ok := &lt;- ch defer fmt.Println(`exitting now\\`) go println(len(&quot;hello world!&quot;)) return&#125; 123456789101112131415#!/bin/bash###### CONFIGACCEPTED_HOSTS=&quot;/root/.hag_accepted.conf&quot;BE_VERBOSE=falseif [ &quot;$UID&quot; -ne 0 ]then echo &quot;Superuser rights required&quot; exit 2figenApacheConf()&#123; echo -e &quot;# Host $&#123;HOME_DIR&#125;$1/$2 :&quot;&#125; 123456789101112; boilerplate[package]name = &quot;some_name&quot;authors = [&quot;Author&quot;]description = &quot;This is \\a description&quot;[[lib]]name = $&#123;NAME&#125;default = Trueauto = nocounter = 1_000","categories":[],"tags":[]},{"title":"Markdown Style test","slug":"markdown","date":"2018-07-24T15:31:06.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2018/07/24/markdown/","link":"","permalink":"https://xiaochuanfu.github.io/2018/07/24/markdown/","excerpt":"This post is originated from here and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.","text":"This post is originated from here and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly. Headers1234567891011121314# H1## H2### H3#### H4##### H5###### H6Alternatively, for H1 and H2, an underline-ish style:Alt-H1======Alt-H2------ H1H2H3H4H5H6Alternatively, for H1 and H2, an underline-ish style: Alt-H1Alt-H2Emphasis1234567Emphasis, aka italics, with *asterisks* or _underscores_.Strong emphasis, aka bold, with **asterisks** or __underscores__.Combined emphasis with **asterisks and _underscores_**.Strikethrough uses two tildes. ~~Scratch this.~~ Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. Strikethrough uses two tildes. Scratch this. Lists123456789101112131415161718192021221. First ordered list item2. Another item * Unordered sub-list.1. Actual numbers don&#x27;t matter, just that it&#x27;s a number 1. Ordered sub-list4. And another item. You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we&#x27;ll use three here to also align the raw Markdown). To have a line break without a paragraph, you will need to use two trailing spaces. Note that this line is separate, but within the same paragraph. (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)* Unordered list can use asterisks- Or minuses+ Or pluses- Paragraph In unordered list For example like this.Common Paragraph with some text.And more text. First ordered list item Another item Unordered sub-list. Actual numbers don’t matter, just that it’s a number Ordered sub-list And another item. You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown). To have a line break without a paragraph, you will need to use two trailing spaces.Note that this line is separate, but within the same paragraph.(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.) Unordered list can use asterisks Or minuses Or pluses Paragraph In unordered list For example like this. Common Paragraph with some text.And more text. Inline HTML1&lt;p&gt;To reboot your computer, press &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;alt&lt;/kbd&gt;+&lt;kbd&gt;del&lt;/kbd&gt;.&lt;/p&gt; To reboot your computer, press ctrl+alt+del. 1234567&lt;dl&gt; &lt;dt&gt;Definition list&lt;/dt&gt; &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt; &lt;dt&gt;Markdown in HTML&lt;/dt&gt; &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;&lt;/dl&gt; Definition list Is something people use sometimes. &lt;dt&gt;Markdown in HTML&lt;/dt&gt; &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt; Links1234567891011121314151617[I&#x27;m an inline-style link](https://www.google.com)[I&#x27;m an inline-style link with title](https://www.google.com &quot;Google&#x27;s Homepage&quot;)[I&#x27;m a reference-style link][Arbitrary case-insensitive reference text][I&#x27;m a relative reference to a repository file](../blob/master/LICENSE)[You can use numbers for reference-style link definitions][1]Or leave it empty and use the [link text itself]Some text to show that the reference links can follow later.[arbitrary case-insensitive reference text]: https://hexo.io[1]: https://hexo.io/docs/[link text itself]: https://hexo.io/api/ I’m an inline-style link I’m an inline-style link with title I’m a reference-style link I’m a relative reference to a repository file You can use numbers for reference-style link definitions Or leave it empty and use the link text itself Some text to show that the reference links can follow later. Images12345678910hover to see the title text:Inline-style:![alt text](https://hexo.io/icon/favicon-196x196.png &quot;Logo Title Text 1&quot;)Reference-style:![alt text][logo][logo]: https://hexo.io/icon/favicon-196x196.png &quot;Logo Title Text 2&quot; hover to see the title text: Inline-style: Reference-style: Code and Syntax HighlightingInline code has back-ticks around it. 12var s = &quot;JavaScript syntax highlighting&quot;;alert(s); 12s = &quot;Python syntax highlighting&quot;print s 12No language indicated, so no syntax highlighting.But let&#x27;s throw in a &lt;b&gt;tag&lt;/b&gt;. Tables12345| |ASCII |HTML ||----------------|-------------------------------|-----------------------------||Single backticks|`&#x27;Isn&#x27;t this fun?&#x27;` |&#x27;Isn&#x27;t this fun?&#x27; ||Quotes |`&quot;Isn&#x27;t this fun?&quot;` |&quot;Isn&#x27;t this fun?&quot; ||Dashes |`-- is en-dash, --- is em-dash`|-- is en-dash, --- is em-dash| ASCII HTML Single backticks &#39;Isn&#39;t this fun?&#39; ‘Isn’t this fun?’ Quotes &quot;Isn&#39;t this fun?&quot; “Isn’t this fun?” Dashes -- is en-dash, --- is em-dash – is en-dash, — is em-dash Colons can be used to align columns. 12345| Tables | Are | Cool || ------------- |:-------------:| -----:|| col 3 is | right-aligned | || col 2 is | centered | || zebra stripes | are neat | Tables Are Cool col 3 is right-aligned col 2 is centered zebra stripes are neat The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown. 1234Markdown | Less | Pretty--- | --- | ---*Still* | `renders` | **nicely**1 | 2 | 3 Markdown Less Pretty Still renders nicely 1 2 3 You can find more information about LaTeX mathematical expressions here. Blockquotes Blockquotes are very handy in email to emulate reply text.This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote. Horizontal RuleThree or more… 1234567891011---Hyphens***Asterisks___Underscores Hyphens Asterisks Underscores Line Breaks123456Here&#x27;s a line for us to start with.This line is separated from the one above by two newlines, so it will be a *separate paragraph*.This line is also a separate paragraph, but...This line is only separated by a single newline, so it&#x27;s a separate line in the *same paragraph*. Here’s a line for us to start with. This line is separated from the one above by two newlines, so it will be a separate paragraph. This line is also a separate paragraph, but…This line is only separated by a single newline, so it’s a separate line in the same paragraph. 123456789This is a regular paragraph.&lt;table&gt; &lt;tr&gt; &lt;td&gt;Foo&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;This is another regular paragraph. This is a regular paragraph. Foo This is another regular paragraph. Youtube videos1234567&lt;a href=&quot;https://www.youtube.com/watch?feature=player_embedded&amp;v=ARted4RniaU&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/ARted4RniaU/0.jpg&quot;alt=&quot;IMAGE ALT TEXT HERE&quot; width=&quot;240&quot; height=&quot;180&quot; border=&quot;10&quot; /&gt;&lt;/a&gt;Pure markdown version:[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/ARted4RniaU/0.jpg)](https://www.youtube.com/watch?v=ARted4RniaU) Pure markdown version:","categories":[],"tags":[{"name":"Foo","slug":"Foo","permalink":"https://xiaochuanfu.github.io/tags/Foo/"},{"name":"Bar","slug":"Bar","permalink":"https://xiaochuanfu.github.io/tags/Bar/"}]},{"title":"Images","slug":"images","date":"2013-12-26T14:46:49.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/26/images/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/26/images/","excerpt":"","text":"This is a image test post.","categories":[],"tags":[]},{"title":"","slug":"no-title","date":"2013-12-25T14:57:49.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/25/no-title/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/25/no-title/","excerpt":"","text":"This post doesn’t have a title. Make sure it’s accessible.","categories":[],"tags":[]},{"title":"Excerpts","slug":"excerpts","date":"2013-12-24T16:23:23.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/25/excerpts/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/25/excerpts/","excerpt":"The following contents should be invisible in home&#x2F;archive page.","text":"The following contents should be invisible in home&#x2F;archive page. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam. Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.","categories":[],"tags":[]},{"title":"Videos","slug":"videos","date":"2013-12-24T16:19:15.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/25/videos/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/25/videos/","excerpt":"","text":"This is a video test post. Youtube Vimeo","categories":[],"tags":[]},{"title":"Gallery Post","slug":"gallery-post","date":"2013-12-24T16:16:18.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/25/gallery-post/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/25/gallery-post/","excerpt":"","text":"This post contains 4 photos: Widescreen wallpaper Portrait photo Dual widescreen wallpaper Small photo All photos should be displayed properly. From Wallbase.cc","categories":[],"tags":[]},{"title":"Tag Plugins","slug":"tag-plugins","date":"2013-12-24T16:14:39.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/25/tag-plugins/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/25/tag-plugins/","excerpt":"","text":"This post is used for testing tag plugins. See docs for more info. Block QuoteNormal blockquote Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Quote from a bookDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake Quote from TwitterNEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 Quote from an article on the webEvery interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing Code BlockNormal code block1alert(&#x27;Hello World!&#x27;); With captionArray.map1array.map(callback[, thisArg]) With caption and URL.compactUnderscore.js12.compact([0, 1, false, 2, ‘’, 3]);=&gt; [1, 2, 3] With marked linesLine 1,7-8,10 should be marked with different color. 1234567891011const http = require(&#x27;http&#x27;);const hostname = &#x27;127.0.0.1&#x27;;const port = 1337;http.createServer((req, res) =&gt; &#123; res.writeHead(200, &#123; &#x27;Content-Type&#x27;: &#x27;text/plain&#x27; &#125;); res.end(&#x27;Hello World\\n&#x27;);&#125;).listen(port, hostname, () =&gt; &#123; console.log(`Server running at http://$&#123;hostname&#125;:$&#123;port&#125;/`);&#125;); Note: Theme’s style should support .highlight.line.marked (recommend to use the selection or current line color). Gist jsFiddle PullquoteLeftLorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac. RightLorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.","categories":[],"tags":[]},{"title":"www.google.com","slug":"link-post-without-title","date":"2013-12-24T15:44:13.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/24/link-post-without-title/","link":"http://www.google.com/","permalink":"https://xiaochuanfu.github.io/2013/12/24/link-post-without-title/","excerpt":"","text":"This is a link post without a title. The title should be the link with or without protocol. Clicking on the link should open Google in a new tab or window.","categories":[],"tags":[]},{"title":"日本語テスト","slug":"日本語テスト","date":"2013-12-24T15:33:26.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/24/日本語テスト/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/24/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%86%E3%82%B9%E3%83%88/","excerpt":"","text":"This is a Japanese test post. 私は昨日ついにその助力家というのの上よりするたなけれ。 最も今をお話団はちょうどこの前後なかろでくらいに困りがいるたをは帰着考えたなかって、そうにもするでうたらない。 がたを知っないはずも同時に九月をいよいよたありた。 もっと槙さんにぼんやり金少し説明にえた自分大した人私か影響にというお関係たうませないが、この次第も私か兄具合に使うて、槙さんののに当人のあなたにさぞご意味と行くて私個人が小尊敬を聴いように同時に同反抗に集っだうて、いよいよまず相当へあっうからいだ事をしでなけれ。 それでそれでもご時日をしはずはたったいやと突き抜けるますて、その元がは行ったてという獄を尽すていけですた。 この中道具の日その学校はあなたごろがすまなりかとネルソンさんの考えるですん、辺の事実ないというご盲従ありたですと、爺さんのためが薬缶が結果までの箸の当時してならて、多少の十月にためからそういう上からとにかくしましないと触れべきものたで、ないうですと多少お人達したのでたた。 From すぐ使えるダミーテキスト - 日本語 Lorem ipsum","categories":[],"tags":[]},{"title":"中文測試","slug":"中文測試","date":"2013-12-24T15:31:30.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/24/中文測試/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/24/%E4%B8%AD%E6%96%87%E6%B8%AC%E8%A9%A6/","excerpt":"","text":"This is a Chinese test post. 善我王上魚、產生資西員合兒臉趣論。畫衣生這著爸毛親可時，安程幾？合學作。觀經而作建。都非子作這！法如言子你關！手師也。 以也座論頭室業放。要車時地變此親不老高小是統習直麼調未，行年香一？ 就竟在，是我童示讓利分和異種百路關母信過明驗有個歷洋中前合著區亮風值新底車有正結，進快保的行戰從：弟除文辦條國備當來際年每小腳識世可的的外的廣下歌洲保輪市果底天影；全氣具些回童但倒影發狀在示，數上學大法很，如要我……月品大供這起服滿老？應學傳者國：山式排只不之然清同關；細車是！停屋常間又，資畫領生，相們制在？公別的人寫教資夠。資再我我！只臉夫藝量不路政吃息緊回力之；兒足灣電空時局我怎初安。意今一子區首者微陸現際安除發連由子由而走學體區園我車當會，經時取頭，嚴了新科同？很夫營動通打，出和導一樂，查旅他。坐是收外子發物北看蘭戰坐車身做可來。道就學務。 國新故。 工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？ From 亂數假文產生器 - Chinese Lorem Ipsum","categories":[],"tags":[]},{"title":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam justo turpis, tincidunt ac convallis id.","slug":"long-title","date":"2013-12-24T15:31:06.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/24/long-title/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/24/long-title/","excerpt":"","text":"This post has a long title. Make sure the title displayed right.","categories":[],"tags":[]},{"title":"Categories","slug":"categories","date":"2013-12-24T15:30:09.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/24/categories/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/24/categories/","excerpt":"","text":"This post contains 3 categories. Make sure your theme can display all of the categories.","categories":[{"name":"Foo","slug":"Foo","permalink":"https://xiaochuanfu.github.io/categories/Foo/"},{"name":"Bar","slug":"Foo/Bar","permalink":"https://xiaochuanfu.github.io/categories/Foo/Bar/"},{"name":"Baz","slug":"Foo/Bar/Baz","permalink":"https://xiaochuanfu.github.io/categories/Foo/Bar/Baz/"}],"tags":[]},{"title":"Link Post","slug":"link-post","date":"2013-12-24T15:30:04.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/24/link-post/","link":"http://www.google.com/","permalink":"https://xiaochuanfu.github.io/2013/12/24/link-post/","excerpt":"","text":"This is a link post. Clicking on the link should open Google in a new tab or window.","categories":[],"tags":[]},{"title":"Tags","slug":"tags","date":"2013-12-24T15:29:53.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/24/tags/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/24/tags/","excerpt":"","text":"This post contains 3 tags. Make sure your theme can display all of the tags.","categories":[],"tags":[{"name":"Foo","slug":"Foo","permalink":"https://xiaochuanfu.github.io/tags/Foo/"},{"name":"Bar","slug":"Bar","permalink":"https://xiaochuanfu.github.io/tags/Bar/"},{"name":"Baz","slug":"Baz","permalink":"https://xiaochuanfu.github.io/tags/Baz/"}]},{"title":"Elements","slug":"elements","date":"2013-12-24T15:29:08.000Z","updated":"2020-08-13T06:53:56.000Z","comments":true,"path":"2013/12/24/elements/","link":"","permalink":"https://xiaochuanfu.github.io/2013/12/24/elements/","excerpt":"","text":"The purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don’t forget to redefine the style by yourself. Heading 1Heading 2Heading 3Heading 4Heading 5Heading 6 ParagraphLorem ipsum dolor sit amet, test link consectetur adipiscing elit. Strong text pellentesque ligula commodo viverra vehicula. Italic text at ullamcorper enim. Morbi a euismod nibh. Underline text non elit nisl. Deleted text tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed erat diam, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget. Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet. List TypesDefinition List (dl)Definition List TitleThis is a definition list division. Ordered List (ol) List Item 1 List Item 2 List Item 3 Unordered List (ul) List Item 1 List Item 2 List Item 3 Checkbox List (ul) List Item 1 unchecked List Item 2 checked List Item 3 checked Table Table Header 1 Table Header 2 Table Header 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Misc Stuff - abbr, acronym, sub, sup, kbd, etc.Lorem superscript dolor subscript amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. cite. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. NBA Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus. AVE. Use Crtl + C to stop.","categories":[],"tags":[]}],"categories":[{"name":"Foo","slug":"Foo","permalink":"https://xiaochuanfu.github.io/categories/Foo/"},{"name":"Bar","slug":"Foo/Bar","permalink":"https://xiaochuanfu.github.io/categories/Foo/Bar/"},{"name":"Baz","slug":"Foo/Bar/Baz","permalink":"https://xiaochuanfu.github.io/categories/Foo/Bar/Baz/"}],"tags":[{"name":"哈哈","slug":"哈哈","permalink":"https://xiaochuanfu.github.io/tags/%E5%93%88%E5%93%88/"},{"name":"Foo","slug":"Foo","permalink":"https://xiaochuanfu.github.io/tags/Foo/"},{"name":"Bar","slug":"Bar","permalink":"https://xiaochuanfu.github.io/tags/Bar/"},{"name":"Baz","slug":"Baz","permalink":"https://xiaochuanfu.github.io/tags/Baz/"}]}